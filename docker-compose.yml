services:
  backend:
    build: .
    container_name: backend-microservices
    ports:
      - "3000:3000" # API
      - "3001:3001" # MySQL Service
      - "3002:3002" # Post Service
      - "3003:3003" # Cache Service
    environment:
      # Configuración MySQL
      MYSQL_HOST: mysql
      MYSQL_USER: vyU7DCqzKX
      MYSQL_PASS: hQ8gtxIQ9o
      MYSQL_DB: vyU7DCqzKX

      # Configuración Redis LOCAL (desde Docker Compose)
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASS: "" # Sin contraseña para Redis local

      # Otros servicios
      MYSQL_SRV_HOST: mysql
      MYSQL_SRV_PORT: 3001
    restart: unless-stopped
    depends_on:
      - mysql
      - redis
    volumes:
      - ./ecosystem.config.js:/app/ecosystem.config.js
      - ./config.js:/app/config.js
    networks:
      - backend-network

  mysql:
    image: mysql:5.7
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: vyU7DCqzKX
      MYSQL_USER: vyU7DCqzKX
      MYSQL_PASSWORD: hQ8gtxIQ9o
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - backend-network

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge

volumes:
  mysql_data:
